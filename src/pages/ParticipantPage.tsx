import React, { useState, useEffect, useRef } from 'react';
import { useParams } from 'react-router-dom';
import { supabase } from '@/integrations/supabase/client';
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent } from "@/components/ui/card";
import { useToast } from "@/components/ui/use-toast";
import { 
  User, Video, VideoOff, Crown, Shield, 
  Check, Ban, UserX, MoreVertical, X,
  Eye, EyeOff, Share, Audio, AudioOff
} from 'lucide-react';

interface Participant {
  id: string;
  name: string;
  joinedAt: number;
  lastActive: number;
  active: boolean;
  selected: boolean;
  connectedAt?: number;
  hasVideo?: boolean;
  isAdmin?: boolean;
  hasAudio?: boolean;
}

const ParticipantPage = () => {
  const { sessionId } = useParams<{ sessionId: string }>();
  const [participantName, setParticipantName] = useState('');
  const [isConnected, setIsConnected] = useState(false);
  const [isConnecting, setIsConnecting] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [participants, setParticipants] = useState<Participant[]>([]);
  const [streams, setStreams] = useState<{[key: string]: MediaStream}>({});
  const [hasVideo, setHasVideo] = useState(false);
  const [hasAudio, setHasAudio] = useState(true);
  const [isScreenSharing, setIsScreenSharing] = useState(false);
  const [isAdmin, setIsAdmin] = useState(false);
  const [isMuted, setIsMuted] = useState(false);
  const [isDeafened, setIsDeafened] = useState(false);
  const [isAlone, setIsAlone] = useState(false);
  const [showSettings, setShowSettings] = useState(false);
  const [isReconnecting, setIsReconnecting] = useState(false);
  const [reconnectAttempts, setReconnectAttempts] = useState(0);
  const [reconnectTimerId, setReconnectTimerId] = useState<number | null>(null);
  const [session, setSession] = useState<any>(null);
  const [channel, setChannel] = useState<any>(null);
  const [participantId, setParticipantId] = useState<string | null>(null);
  const [participant, setParticipant] = useState<Participant | null>(null);
  const [screenShareStream, setScreenShareStream] = useState<MediaStream | null>(null);
  const [isCameraBlocked, setIsCameraBlocked] = useState(false);
  const [isMicrophoneBlocked, setIsMicrophoneBlocked] = useState(false);
  const [cameraError, setCameraError] = useState<string | null>(null);
  const [microphoneError, setMicrophoneError] = useState<string | null>(null);
  const [cameraDeviceId, setCameraDeviceId] = useState<string | null>(null);
  const [microphoneDeviceId, setMicrophoneDeviceId] = useState<string | null>(null);
  const [availableCameras, setAvailableCameras] = useState<MediaDeviceInfo[]>([]);
  const [availableMicrophones, setAvailableMicrophones] = useState<MediaDeviceInfo[]>([]);
  const [selectedCamera, setSelectedCamera] = useState<string | null>(null);
  const [selectedMicrophone, setSelectedMicrophone] = useState<string | null>(null);
  const [videoTrack, setVideoTrack] = useState<MediaStreamTrack | null>(null);
  const [audioTrack, setAudioTrack] = useState<MediaStreamTrack | null>(null);
  const [audioContext, setAudioContext] = useState<AudioContext | null>(null);
  const [audioSource, setAudioSource] = useState<MediaStreamAudioSourceNode | null>(null);
  const [analyser, setAnalyser] = useState<AnalyserNode | null>(null);
  const [microphoneLevel, setMicrophoneLevel] = useState(0);
  const [isSpeaking, setIsSpeaking] = useState(false);
  const [speakingThreshold, setSpeakingThreshold] = useState(50);
  const [speakingHistory, setSpeakingHistory] = useState<boolean[]>([]);
  const [speakingHistoryLength, setSpeakingHistoryLength] = useState(10);
  const [speakingDebounceTimeout, setSpeakingDebounceTimeout] = useState<NodeJS.Timeout | null>(null);
  const [speakingDebounceDelay, setSpeakingDebounceDelay] = useState(100);
  const [videoRef, setVideoRef] = useState<HTMLVideoElement | null>(null);
  const [audioRef, setAudioRef] = useState<HTMLAudioElement | null>(null);
  const [screenShareVideoRef, setScreenShareVideoRef] = useState<HTMLVideoElement | null>(null);
  const [isAudioContextStarted, setIsAudioContextStarted] = useState(false);
  const [isAudioSetupComplete, setIsAudioSetupComplete] = useState(false);
  const [isAudioEnabled, setIsAudioEnabled] = useState(true);
  const [isAudioProcessing, setIsAudioProcessing] = useState(false);
  const [isAudioPermissionsGranted, setIsAudioPermissionsGranted] = useState(false);
  const [isCameraPermissionsGranted, setIsCameraPermissionsGranted] = useState(false);
  const [isInitialCameraCheckDone, setIsInitialCameraCheckDone] = useState(false);
  const [isInitialMicrophoneCheckDone, setIsInitialMicrophoneCheckDone] = useState(false);
  const [isInitialPermissionsCheckDone, setIsInitialPermissionsCheckDone] = useState(false);
  const [isInitialAudioSetupDone, setIsInitialAudioSetupDone] = useState(false);
  const [isInitialVideoSetupDone, setIsInitialVideoSetupDone] = useState(false);
  const [isInitialScreenShareSetupDone, setIsInitialScreenShareSetupDone] = useState(false);
  const [isInitialConnectionAttemptDone, setIsInitialConnectionAttemptDone] = useState(false);
  const [isInitialConnectionDone, setIsInitialConnectionDone] = useState(false);
  const [isInitialDataFetchDone, setIsInitialDataFetchDone] = useState(false);
  const [isInitialStreamSetupDone, setIsInitialStreamSetupDone] = useState(false);
  const [isInitialParticipantSetupDone, setIsInitialParticipantSetupDone] = useState(false);
  const [isInitialSessionSetupDone, setIsInitialSessionSetupDone] = useState(false);
  const [isInitialChannelSetupDone, setIsInitialChannelSetupDone] = useState(false);
  const [isInitialStateSetupDone, setIsInitialStateSetupDone] = useState(false);
  const [isInitialEffectSetupDone, setIsInitialEffectSetupDone] = useState(false);
  const [isInitialCleanupSetupDone, setIsInitialCleanupSetupDone] = useState(false);
  const [isInitialErrorSetupDone, setIsInitialErrorSetupDone] = useState(false);
  const [isInitialWarningSetupDone, setIsInitialWarningSetupDone] = useState(false);
  const [isInitialDebugSetupDone, setIsInitialDebugSetupDone] = useState(false);
  const [isInitialAnalyticsSetupDone, setIsInitialAnalyticsSetupDone] = useState(false);
  const [isInitialSecuritySetupDone, setIsInitialSecuritySetupDone] = useState(false);
  const [isInitialPerformanceSetupDone, setIsInitialPerformanceSetupDone] = useState(false);
  const [isInitialAccessibilitySetupDone, setIsInitialAccessibilitySetupDone] = useState(false);
  const [isInitialInternationalizationSetupDone, setIsInitialInternationalizationSetupDone] = useState(false);
  const [isInitialTestingSetupDone, setIsInitialTestingSetupDone] = useState(false);
  const [isInitialDocumentationSetupDone, setIsInitialDocumentationSetupDone] = useState(false);
  const [isInitialContributionSetupDone, setIsInitialContributionSetupDone] = useState(false);
  const [isInitialCommunitySetupDone, setIsInitialCommunitySetupDone] = useState(false);
  const [isInitialSupportSetupDone, setIsInitialSupportSetupDone] = useState(false);
  const [isInitialLicensingSetupDone, setIsInitialLicensingSetupDone] = useState(false);
  const [isInitialLegalSetupDone, setIsInitialLegalSetupDone] = useState(false);
  const [isInitialComplianceSetupDone, setIsInitialComplianceSetupDone] = useState(false);
  const [isInitialPrivacySetupDone, setIsInitialPrivacySetupDone] = useState(false);
  const [isInitialTermsSetupDone, setIsInitialTermsSetupDone] = useState(false);
  const [isInitialCodeOfConductSetupDone, setIsInitialCodeOfConductSetupDone] = useState(false);
  const [isInitialSecurityPolicySetupDone, setIsInitialSecurityPolicySetupDone] = useState(false);
  const [isInitialVulnerabilityReportingSetupDone, setIsInitialVulnerabilityReportingSetupDone] = useState(false);
  const [isInitialBugBountySetupDone, setIsInitialBugBountySetupDone] = useState(false);
  const [isInitialResponsibleDisclosureSetupDone, setIsInitialResponsibleDisclosureSetupDone] = useState(false);
  const [isInitialThreatModelingSetupDone, setIsInitialThreatModelingSetupDone] = useState(false);
  const [isInitialPenetrationTestingSetupDone, setIsInitialPenetrationTestingSetupDone] = useState(false);
  const [isInitialSecurityAuditingSetupDone, setIsInitialSecurityAuditingSetupDone] = useState(false);
  const [isInitialSecurityTrainingSetupDone, setIsInitialSecurityTrainingSetupDone] = useState(false);
  const [isInitialSecurityAwarenessSetupDone, setIsInitialSecurityAwarenessSetupDone] = useState(false);
  const [isInitialSecurityChampionSetupDone, setIsInitialSecurityChampionSetupDone] = useState(false);
  const [isInitialSecurityCultureSetupDone, setIsInitialSecurityCultureSetupDone] = useState(false);
  const [isInitialSecurityMetricsSetupDone, setIsInitialSecurityMetricsSetupDone] = useState(false);
  const [isInitialSecurityGovernanceSetupDone, setIsInitialSecurityGovernanceSetupDone] = useState(false);
  const [isInitialSecurityRiskManagementSetupDone, setIsInitialSecurityRiskManagementSetupDone] = useState(false);
  const [isInitialSecurityIncidentResponseSetupDone, setIsInitialSecurityIncidentResponseSetupDone] = useState(false);
  const [isInitialSecurityDisasterRecoverySetupDone, setIsInitialSecurityDisasterRecoverySetupDone] = useState(false);
  const [isInitialSecurityBusinessContinuitySetupDone, setIsInitialSecurityBusinessContinuitySetupDone] = useState(false);
  const [isInitialSecurityCrisisManagementSetupDone, setIsInitialSecurityCrisisManagementSetupDone] = useState(false);
  const [isInitialSecurityEmergencyResponseSetupDone, setIsInitialSecurityEmergencyResponseSetupDone] = useState(false);
  const [isInitialSecurityResilienceSetupDone, setIsInitialSecurityResilienceSetupDone] = useState(false);
  const [isInitialSecuritySustainabilitySetupDone, setIsInitialSecuritySustainabilitySetupDone] = useState(false);
  const [isInitialSecurityInnovationSetupDone, setIsInitialSecurityInnovationSetupDone] = useState(false);
  const [isInitialSecurityTransformationSetupDone, setIsInitialSecurityTransformationSetupDone] = useState(false);
  const [isInitialSecurityLeadershipSetupDone, setIsInitialSecurityLeadershipSetupDone] = useState(false);
  const [isInitialSecurityStrategySetupDone, setIsInitialSecurityStrategySetupDone] = useState(false);
  const [isInitialSecurityArchitectureSetupDone, setIsInitialSecurityArchitectureSetupDone] = useState(false);
  const [isInitialSecurityEngineeringSetupDone, setIsInitialSecurityEngineeringSetupDone] = useState(false);
  const [isInitialSecurityOperationsSetupDone, setIsInitialSecurityOperationsSetupDone] = useState(false);
  const [isInitialSecurityIntelligenceSetupDone, setIsInitialSecurityIntelligenceSetupDone] = useState(false);
  const [isInitialSecurityAutomationSetupDone, setIsInitialSecurityAutomationSetupDone] = useState(false);
  const [isInitialSecurityOrchestrationSetupDone, setIsInitialSecurityOrchestrationSetupDone] = useState(false);
  const [isInitialSecurityResponseSetupDone, setIsInitialSecurityResponseSetupDone] = useState(false);
  const [isInitialSecurityRecoverySetupDone, setIsInitialSecurityRecoverySetupDone] = useState(false);
  const [isInitialSecurityResiliencePlanningSetupDone, setIsInitialSecurityResiliencePlanningSetupDone] = useState(false);
  const [isInitialSecuritySustainabilityPlanningSetupDone, setIsInitialSecuritySustainabilityPlanningSetupDone] = useState(false);
  const [isInitialSecurityInnovationPlanningSetupDone, setIsInitialSecurityInnovationPlanningSetupDone] = useState(false);
  const [isInitialSecurityTransformationPlanningSetupDone, setIsInitialSecurityTransformationPlanningSetupDone] = useState(false);
  const [isInitialSecurityLeadershipPlanningSetupDone, setIsInitialSecurityLeadershipPlanningSetupDone] = useState(false);
  const [isInitialSecurityStrategyPlanningSetupDone, setIsInitialSecurityStrategyPlanningSetupDone] = useState(false);
  const [isInitialSecurityArchitecturePlanningSetupDone, setIsInitialSecurityArchitecturePlanningSetupDone] = useState(false);
  const [isInitialSecurityEngineeringPlanningSetupDone, setIsInitialSecurityEngineeringPlanningSetupDone] = useState(false);
  const [isInitialSecurityOperationsPlanningSetupDone, setIsInitialSecurityOperationsPlanningSetupDone] = useState(false);
  const [isInitialSecurityIntelligencePlanningSetupDone, setIsInitialSecurityIntelligencePlanningSetupDone] = useState(false);
  const [isInitialSecurityAutomationPlanningSetupDone, setIsInitialSecurityAutomationPlanningSetupDone] = useState(false);
  const [isInitialSecurityOrchestrationPlanningSetupDone, setIsInitialSecurityOrchestrationPlanningSetupDone] = useState(false);
  const [isInitialSecurityResponsePlanningSetupDone, setIsInitialSecurityResponsePlanningSetupDone] = useState(false);
  const [isInitialSecurityRecoveryPlanningSetupDone, setIsInitialSecurityRecoveryPlanningSetupDone] = useState(false);
  const [isInitialSecurityResilienceExecutionSetupDone, setIsInitialSecurityResilienceExecutionSetupDone] = useState(false);
  const [isInitialSecuritySustainabilityExecutionSetupDone, setIsInitialSecuritySustainabilityExecutionSetupDone] = useState(false);
  const [isInitialSecurityInnovationExecutionSetupDone, setIsInitialSecurityInnovationExecutionSetupDone] = useState(false);
  const [isInitialSecurityTransformationExecutionSetupDone, setIsInitialSecurityTransformationExecutionSetupDone] = useState(false);
  const [isInitialSecurityLeadershipExecutionSetupDone, setIsInitialSecurityLeadershipExecutionSetupDone] = useState(false);
  const [isInitialSecurityStrategyExecutionSetupDone, setIsInitialSecurityStrategyExecutionSetupDone] = useState(false);
  const [isInitialSecurityArchitectureExecutionSetupDone, setIsInitialSecurityArchitectureExecutionSetupDone] = useState(false);
  const [isInitialSecurityEngineeringExecutionSetupDone, setIsInitialSecurityEngineeringExecutionSetupDone] = useState(false);
  const [isInitialSecurityOperationsExecutionSetupDone, setIsInitialSecurityOperationsExecutionSetupDone] = useState(false);
  const [isInitialSecurityIntelligenceExecutionSetupDone, setIsInitialSecurityIntelligenceExecutionSetupDone] = useState(false);
  const [isInitialSecurityAutomationExecutionSetupDone, setIsInitialSecurityAutomationExecutionSetupDone] = useState(false);
  const [isInitialSecurityOrchestrationExecutionSetupDone, setIsInitialSecurityOrchestrationExecutionSetupDone] = useState(false);
  const [isInitialSecurityResponseExecutionSetupDone, setIsInitialSecurityResponseExecutionSetupDone] = useState(false);
  const [isInitialSecurityRecoveryExecutionSetupDone, setIsInitialSecurityRecoveryExecutionSetupDone] = useState(false);
  const [isInitialSecurityResilienceMonitoringSetupDone, setIsInitialSecurityResilienceMonitoringSetupDone] = useState(false);
  const [isInitialSecuritySustainabilityMonitoringSetupDone, setIsInitialSecuritySustainabilityMonitoringSetupDone] = useState(false);
  const [isInitialSecurityInnovationMonitoringSetupDone, setIsInitialSecurityInnovationMonitoringSetupDone] = useState(false);
  const [isInitialSecurityTransformationMonitoringSetupDone, setIsInitialSecurityTransformationMonitoringSetupDone] = useState(false);
  const [isInitialSecurityLeadershipMonitoringSetupDone, setIsInitialSecurityLeadershipMonitoringSetupDone] = useState(false);
  const [isInitialSecurityStrategyMonitoringSetupDone, setIsInitialSecurityStrategyMonitoringSetupDone] = useState(false);
  const [isInitialSecurityArchitectureMonitoringSetupDone, setIsInitialSecurityArchitectureMonitoringSetupDone] = useState(false);
  const [isInitialSecurityEngineeringMonitoringSetupDone, setIsInitialSecurityEngineeringMonitoringSetupDone] = useState(false);
  const [isInitialSecurityOperationsMonitoringSetupDone, setIsInitialSecurityOperationsMonitoringSetupDone] = useState(false);
  const [isInitialSecurityIntelligenceMonitoringSetupDone, setIsInitialSecurityIntelligenceMonitoringSetupDone] = useState(false);
  const [isInitialSecurityAutomationMonitoringSetupDone, setIsInitialSecurityAutomationMonitoringSetupDone] = useState(false);
  const [isInitialSecurityOrchestrationMonitoringSetupDone, setIsInitialSecurityOrchestrationMonitoringSetupDone] = useState(false);
  const [isInitialSecurityResponseMonitoringSetupDone, setIsInitialSecurityResponseMonitoringSetupDone] = useState(false);
  const [isInitialSecurityRecoveryMonitoringSetupDone, setIsInitialSecurityRecoveryMonitoringSetupDone] = useState(false);
  const [isInitialSecurityResilienceImprovementSetupDone, setIsInitialSecurityResilienceImprovementSetupDone] = useState(false);
  const [isInitialSecuritySustainabilityImprovementSetupDone, setIsInitialSecuritySustainabilityImprovementSetupDone] = useState(false);
  const [isInitialSecurityInnovationImprovementSetupDone, setIsInitialSecurityInnovationImprovementSetupDone] = useState(false);
  const [isInitialSecurityTransformationImprovementSetupDone, setIsInitialSecurityTransformationImprovementSetupDone] = useState(false);
  const [isInitialSecurityLeadershipImprovementSetupDone, setIsInitialSecurityLeadershipImprovementSetupDone] = useState(false);
  const [isInitialSecurityStrategyImprovementSetupDone, setIsInitialSecurityStrategyImprovementSetupDone] = useState(false);
  const [isInitialSecurityArchitectureImprovementSetupDone, setIsInitialSecurityArchitectureImprovementSetupDone] = useState(false);
  const [isInitialSecurityEngineeringImprovementSetupDone, setIsInitialSecurityEngineeringImprovementSetupDone] = useState(false);
  const [isInitialSecurityOperationsImprovementSetupDone, setIsInitialSecurityOperationsImprovementSetupDone] = useState(false);
  const [isInitialSecurityIntelligenceImprovementSetupDone, setIsInitialSecurityIntelligenceImprovementSetupDone] = useState(false);
  const [isInitialSecurityAutomationImprovementSetupDone, setIsInitialSecurityAutomationImprovementSetupDone] = useState(false);
  const [isInitialSecurityOrchestrationImprovementSetupDone, setIsInitialSecurityOrchestrationImprovementSetupDone] = useState(false);
  const [isInitialSecurityResponseImprovementSetupDone, setIsInitialSecurityResponseImprovementSetupDone] = useState(false);
  const [isInitialSecurityRecoveryImprovementSetupDone, setIsInitialSecurityRecoveryImprovementSetupDone] = useState(false);
  const { toast } = useToast();
  const videoRefLocal = useRef<HTMLVideoElement>(null);
  const audioRefLocal = useRef<HTMLAudioElement>(null);
  const screenShareVideoRefLocal = useRef<HTMLVideoElement>(null);
  const [localStream, setLocalStream] = useState<MediaStream | null>(null);
  const [localScreenShareStream, setLocalScreenShareStream] = useState<MediaStream | null>(null);
  const [isLocalVideoEnabled, setIsLocalVideoEnabled] = useState(true);
  const [isLocalAudioEnabled, setIsLocalAudioEnabled] = useState(true);
  const [isLocalScreenShareEnabled, setIsLocalScreenShareEnabled] = useState(false);
  const [localParticipant, setLocalParticipant] = useState<Participant | null>(null);
  const [localParticipantId, setLocalParticipantId] = useState<string | null>(null);
  const [localParticipantName, setLocalParticipantName] = useState<string | null>(null);
  const [localParticipantJoinedAt, setLocalParticipantJoinedAt] = useState<number | null>(null);
  const [localParticipantLastActive, setLocalParticipantLastActive] = useState<number | null>(null);
  const [localParticipantActive, setLocalParticipantActive] = useState<boolean | null>(null);
  const [localParticipantSelected, setLocalParticipantSelected] = useState<boolean | null>(null);
  const [localParticipantConnectedAt, setLocalParticipantConnectedAt] = useState<number | null>(null);
  const [localParticipantHasVideo, setLocalParticipantHasVideo] = useState<boolean | null>(null);
  const [localParticipantIsAdmin, setLocalParticipantIsAdmin] = useState<boolean | null>(null);
  const [localParticipantHasAudio, setLocalParticipantHasAudio] = useState<boolean | null>(null);
  const [localParticipantIsMuted, setLocalParticipantIsMuted] = useState<boolean | null>(null);
  const [localParticipantIsDeafened, setLocalParticipantIsDeafened] = useState<boolean | null>(null);
  const [localParticipantIsAlone, setLocalParticipantIsAlone] = useState<boolean | null>(null);
  const [localParticipantShowSettings, setLocalParticipantShowSettings] = useState<boolean | null>(null);
  const [localParticipantIsReconnecting, setLocalParticipantIsReconnecting] = useState<boolean | null>(null);
  const [localParticipantReconnectAttempts, setLocalParticipantReconnectAttempts] = useState<number | null>(null);
  const [localParticipantReconnectTimerId, setLocalParticipantReconnectTimerId] = useState<number | null>(null);
  const [localParticipantSession, setLocalParticipantSession] = useState<any | null>(null);
  const [localParticipantChannel, setLocalParticipantChannel] = useState<any | null>(null);
  const [localParticipantScreenShareStream, setLocalParticipantScreenShareStream] = useState<MediaStream | null>(null);
  const [localParticipantIsCameraBlocked, setLocalParticipantIsCameraBlocked] = useState<boolean | null>(null);
  const [localParticipantIsMicrophoneBlocked, setLocalParticipantIsMicrophoneBlocked] = useState<boolean | null>(null);
  const [localParticipantCameraError, setLocalParticipantCameraError] = useState<string | null>(null);
  const [localParticipantMicrophoneError, setLocalParticipantMicrophoneError] = useState<string | null>(null);
  const [localParticipantCameraDeviceId, setLocalParticipantCameraDeviceId] = useState<string | null>(null);
  const [localParticipantMicrophoneDeviceId, setLocalParticipantMicrophoneDeviceId] = useState<string | null>(null);
  const [localParticipantAvailableCameras, setLocalParticipantAvailableCameras] = useState<MediaDeviceInfo[] | null>(null);
  const [localParticipantAvailableMicrophones, setLocalParticipantAvailableMicrophones] = useState<MediaDeviceInfo[] | null>(null);
  const [localParticipantSelectedCamera, setLocalParticipantSelectedCamera] = useState<string | null>(null);
  const [localParticipantSelectedMicrophone, setLocalParticipantSelectedMicrophone] = useState<string | null>(null);
  const [localParticipantVideoTrack, setLocalParticipantVideoTrack] = useState<MediaStreamTrack | null>(null);
  const [localParticipantAudioTrack, setLocalParticipantAudioTrack] = useState<MediaStreamTrack | null>(null);
  const [localParticipantAudioContext, setLocalParticipantAudioContext] = useState<AudioContext | null>(null);
  const [localParticipantAudioSource, setLocalParticipantAudioSource] = useState<MediaStreamAudioSourceNode | null>(null);
  const [localParticipantAnalyser, setLocalParticipantAnalyser] = useState<AnalyserNode | null>(null);
  const [localParticipantMicrophoneLevel, setLocalParticipantMicrophoneLevel] = useState<number | null>(null);
  const [localParticipantIsSpeaking, setLocalParticipantIsSpeaking] = useState<boolean | null>(null);
  const [localParticipantSpeakingThreshold, setLocalParticipantSpeakingThreshold] = useState<number | null>(null);
  const [localParticipantSpeakingHistory, setLocalParticipantSpeakingHistory] = useState<boolean[] | null>(null);
  const [localParticipantSpeakingHistoryLength, setLocalParticipantSpeakingHistoryLength] = useState<number | null>(null);
  const [localParticipantSpeakingDebounceTimeout, setLocalParticipantSpeakingDebounceTimeout] = useState<NodeJS.Timeout | null>(null);
  const [localParticipantSpeakingDebounceDelay, setLocalParticipantSpeakingDebounceDelay] = useState<number | null>(null);
  const [localParticipantVideoRef, setLocalParticipantVideoRef] = useState<HTMLVideoElement | null>(null);
  const [localParticipantAudioRef, setLocalParticipantAudioRef] = useState<HTMLAudioElement | null>(null);
  const [localParticipantScreenShareVideoRef, setLocalParticipantScreenShareVideoRef] = useState<HTMLVideoElement | null>(null);
  const [localParticipantIsAudioContextStarted, setLocalParticipantIsAudioContextStarted] = useState<boolean | null>(null);
  const [localParticipantIsAudioSetupComplete, setLocalParticipantIsAudioSetupComplete] = useState<boolean | null>(null);
  const [localParticipantIsAudioEnabled, setLocalParticipantIsAudioEnabled] = useState<boolean | null>(null);
  const [localParticipantIsAudioProcessing, setLocalParticipantIsAudioProcessing] = useState<boolean | null>(null);
  const [localParticipantIsAudioPermissionsGranted, setLocalParticipantIsAudioPermissionsGranted] = useState<boolean | null>(null);
  const [localParticipantIsCameraPermissionsGranted, setLocalParticipantIsCameraPermissionsGranted] = useState<boolean | null>(null);
  const [localParticipantIsInitialCameraCheckDone, setLocalParticipantIsInitialCameraCheckDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialMicrophoneCheckDone, setLocalParticipantIsInitialMicrophoneCheckDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialPermissionsCheckDone, setLocalParticipantIsInitialPermissionsCheckDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialAudioSetupDone, setLocalParticipantIsInitialAudioSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialVideoSetupDone, setLocalParticipantIsInitialVideoSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialScreenShareSetupDone, setLocalParticipantIsInitialScreenShareSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialConnectionAttemptDone, setLocalParticipantIsInitialConnectionAttemptDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialConnectionDone, setLocalParticipantIsInitialConnectionDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialDataFetchDone, setLocalParticipantIsInitialDataFetchDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialStreamSetupDone, setLocalParticipantIsInitialStreamSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialParticipantSetupDone, setLocalParticipantIsInitialParticipantSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSessionSetupDone, setLocalParticipantIsInitialSessionSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialChannelSetupDone, setLocalParticipantIsInitialChannelSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialStateSetupDone, setLocalParticipantIsInitialStateSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialEffectSetupDone, setLocalParticipantIsInitialEffectSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialCleanupSetupDone, setLocalParticipantIsInitialCleanupSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialErrorSetupDone, setLocalParticipantIsInitialErrorSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialWarningSetupDone, setLocalParticipantIsInitialWarningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialDebugSetupDone, setLocalParticipantIsInitialDebugSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialAnalyticsSetupDone, setLocalParticipantIsInitialAnalyticsSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecuritySetupDone, setLocalParticipantIsInitialSecuritySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialPerformanceSetupDone, setLocalParticipantIsInitialPerformanceSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialAccessibilitySetupDone, setLocalParticipantIsInitialAccessibilitySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialInternationalizationSetupDone, setLocalParticipantIsInitialInternationalizationSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialTestingSetupDone, setLocalParticipantIsInitialTestingSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialDocumentationSetupDone, setLocalParticipantIsInitialDocumentationSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialContributionSetupDone, setLocalParticipantIsInitialContributionSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialCommunitySetupDone, setLocalParticipantIsInitialCommunitySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSupportSetupDone, setLocalParticipantIsInitialSupportSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialLicensingSetupDone, setLocalParticipantIsInitialLicensingSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialLegalSetupDone, setLocalParticipantIsInitialLegalSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialComplianceSetupDone, setLocalParticipantIsInitialComplianceSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialPrivacySetupDone, setLocalParticipantIsInitialPrivacySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialTermsSetupDone, setLocalParticipantIsInitialTermsSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialCodeOfConductSetupDone, setLocalParticipantIsInitialCodeOfConductSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityPolicySetupDone, setLocalParticipantIsInitialSecurityPolicySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialVulnerabilityReportingSetupDone, setLocalParticipantIsInitialVulnerabilityReportingSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialBugBountySetupDone, setLocalParticipantIsInitialBugBountySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialResponsibleDisclosureSetupDone, setLocalParticipantIsInitialResponsibleDisclosureSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialThreatModelingSetupDone, setLocalParticipantIsInitialThreatModelingSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialPenetrationTestingSetupDone, setLocalParticipantIsInitialPenetrationTestingSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityAuditingSetupDone, setLocalParticipantIsInitialSecurityAuditingSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityTrainingSetupDone, setLocalParticipantIsInitialSecurityTrainingSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityAwarenessSetupDone, setLocalParticipantIsInitialSecurityAwarenessSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityChampionSetupDone, setLocalParticipantIsInitialSecurityChampionSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityCultureSetupDone, setLocalParticipantIsInitialSecurityCultureSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityMetricsSetupDone, setLocalParticipantIsInitialSecurityMetricsSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityGovernanceSetupDone, setLocalParticipantIsInitialSecurityGovernanceSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityRiskManagementSetupDone, setLocalParticipantIsInitialSecurityRiskManagementSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityIncidentResponseSetupDone, setLocalParticipantIsInitialSecurityIncidentResponseSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityDisasterRecoverySetupDone, setLocalParticipantIsInitialSecurityDisasterRecoverySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityBusinessContinuitySetupDone, setLocalParticipantIsInitialSecurityBusinessContinuitySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityCrisisManagementSetupDone, setLocalParticipantIsInitialSecurityCrisisManagementSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityEmergencyResponseSetupDone, setLocalParticipantIsInitialSecurityEmergencyResponseSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityResilienceSetupDone, setLocalParticipantIsInitialSecurityResilienceSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecuritySustainabilitySetupDone, setLocalParticipantIsInitialSecuritySustainabilitySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityInnovationSetupDone, setLocalParticipantIsInitialSecurityInnovationSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityTransformationSetupDone, setLocalParticipantIsInitialSecurityTransformationSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityLeadershipSetupDone, setLocalParticipantIsInitialSecurityLeadershipSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityStrategySetupDone, setLocalParticipantIsInitialSecurityStrategySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityArchitectureSetupDone, setLocalParticipantIsInitialSecurityArchitectureSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityEngineeringSetupDone, setLocalParticipantIsInitialSecurityEngineeringSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityOperationsSetupDone, setLocalParticipantIsInitialSecurityOperationsSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityIntelligenceSetupDone, setLocalParticipantIsInitialSecurityIntelligenceSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityAutomationSetupDone, setLocalParticipantIsInitialSecurityAutomationSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityOrchestrationSetupDone, setLocalParticipantIsInitialSecurityOrchestrationSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityResponseSetupDone, setLocalParticipantIsInitialSecurityResponseSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityRecoverySetupDone, setLocalParticipantIsInitialSecurityRecoverySetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityResiliencePlanningSetupDone, setLocalParticipantIsInitialSecurityResiliencePlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecuritySustainabilityPlanningSetupDone, setLocalParticipantIsInitialSecuritySustainabilityPlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityInnovationPlanningSetupDone, setLocalParticipantIsInitialSecurityInnovationPlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityTransformationPlanningSetupDone, setLocalParticipantIsInitialSecurityTransformationPlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityLeadershipPlanningSetupDone, setLocalParticipantIsInitialSecurityLeadershipPlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityStrategyPlanningSetupDone, setLocalParticipantIsInitialSecurityStrategyPlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityArchitecturePlanningSetupDone, setLocalParticipantIsInitialSecurityArchitecturePlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityEngineeringPlanningSetupDone, setLocalParticipantIsInitialSecurityEngineeringPlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityOperationsPlanningSetupDone, setLocalParticipantIsInitialSecurityOperationsPlanningSetupDone] = useState<boolean | null>(null);
  const [localParticipantIsInitialSecurityIntelligencePlanningSetupDone, setLocalParticipantIs
